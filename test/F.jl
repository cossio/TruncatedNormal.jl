using Test, SpecialFunctions
using TruncatedNormal: _F1, _F2, _F3, _F4, _G2, _G3

f1(x, y) = (exp(-x^2) - exp(-y^2)) / (erf(x) - erf(y))
f2(x, y) = (exp(-x^2)x - exp(-y^2)y) / (erf(x) - erf(y))
f3(x, y) = (exp(-x^2) + exp(-y^2)) / (erf(x) - erf(y))
f4(x, y) = (3x * exp(-x^2) - (2x+y)exp(-y^2)) / (erf(x) - erf(y))
g1(x, y) = (exp(-x^2)x - exp(-y^2)y) / (exp(-x^2) - exp(-y^2))
g3(x, y) = (exp(-x^2) + exp(-y^2)) / (exp(-x^2) - exp(-y^2))

@testset "F1, F2, F3" begin
    @testset "x ≈ y" begin
        @test _F1(1, 1 + 1e-8) ≈ -1.77245385976778525228484995704
        @test _F2(1, 1 + 1e-8) ≈ -0.886226943177296522704243423834
        @test _F3(1, 1 + 1e-8) ≈ -1.77245385090551605683906558925e8
        @test _G2(1, 1 + 1e-8) ≈ 0.500000007499999970833333312500
        @test _G3(1, 1 + 1e-8) ≈ 9.99999995000000058333333375000e7
        @test _F1(0, 1e-10) ≈ -8.86226925452758013647606696795e-11
        @test _F2(0, 1e-10) ≈ 0.886226925452758013643175562168
        @test _F3(0, 1e-10) ≈ -1.77245385090551602729521339359e10
        @test _G2(0, 1e-10) ≈ -9.99999999999999999995000000000e9
    end

    @testset "Properties" begin
        for x = 1e-2 : 1e-2 : 10
            @test iszero(_F1(-x, x))
            @test _F2(-x, x) ≈ x * exp(-x^2) / erf(x)
            @test _F3(-x, x) ≈ -exp(-x^2) / erf(x)
            @test _G2(x, x) ≈ x - 1 / (2x)
        end
        for x = 1e-9 : 1e-9 : 1e-8
            if x ≠ 0
                @test _F2(-x, x) ≈ x * exp(-x^2) / erf(x)
                @test _F3(-x, x) ≈ -exp(-x^2) / erf(x)
            end
            @test _G2(x, x) ≈ x - 1 / (2x)
        end
    end

    @testset "x ≤ 0 ≤ y || y ≤ 0 ≤ x" begin
        @test _F1(-1, 1) == 0
        @test _F2(-1, 1) ≈ 0.436548113220292413451721744841
        @test _F3(-1, 1) ≈ -0.436548113220292413451721744841
        @test isinf(_G2(-1, 1))
        @test _F1(-2, 1) ≈ 0.190184666491092019086029997367
        @test _F2(-2, 1) ≈ 0.220079240679365999668879344802
        @test _G2(-2, 1) ≈ 1.15718708947376785591599818380
        @test _F1(-100, 1) ≈ 0.199641440747717373738835579396
        @test _F2(-100, 1) ≈ 0.199641440747717373738835579396
        @test _F3(-100, 1) ≈ -0.199641440747717373738835579396
        @test _F1(-1, 100) ≈ -0.199641440747717373738835579396
        @test _F2(-1, 100) ≈ 0.199641440747717373738835579396
        @test _F3(-1, 100) ≈ -0.199641440747717373738835579396

        @test _F1(-Inf, 0) ≈ 1
        @test _F1(-Inf, 1) ≈ 0.199641440747717373738835579396
        @test _F1(-Inf, 4) ≈ 5.62675877933755134754466836019e-8
        @test _F1(-Inf, 10) ≈ 1.86003798801041798147984790193e-44
    end

    @testset "x, y < 0" begin
        @test _F1(-2, -1) ≈ 2.29039726549175154756498826419
        @test _F2(-2, -1) ≈ -2.17039030552464315391802895425
        @test _F1(-101, -100) ≈ 177.254246473800679651649984682
        @test _F2(-101, -100) ≈ -17725.424647380067965164998468
        @test _F3(-101, -100) ≈ -177.254246473800679651649984683
        @test _F1(-150, -110) ≈ 194.977979542322091092377246367
        @test _F2(-110, -150) ≈ -21447.577749655430020161497100
        @test _F3(-150, -110) ≈ -194.977979542322091092377246367
    end

    @testset "x, y > 0" begin
        @test _F1(1, 2) ≈ -2.29039726549175154756498826419
        @test _F2(1, 2) ≈ -2.17039030552464315391802895425
        @test _F1(100, 101) ≈ -177.254246473800679651649984683
        @test _F2(100, 101) ≈ -17725.4246473800679651649984683
        @test _F1(110, 150) ≈ -194.977979542322091092377246367
        @test _F2(110, 150) ≈ -21447.5777496554300201614971004
        @test _F1(100, 115) ≈ -177.254246473800679651649984683
        @test _F2(100, 115) ≈ -17725.4246473800679651649984683
    end

    @testset "Exhaustive" begin
        @test _F1(-5e-8, 5e-8) ≈ f1(-big"5e-8", big"5e-8")
        @test _F2(-5e-8, 5e-8) ≈ f2(-big"5e-8", big"5e-8")
        @test _F3(-5e-8, 5e-8) ≈ f3(-big"5e-8", big"5e-8")
        for x = -1 : 0.01 : 1, y = x : 0.01 : 1
            if x ≠ y
                @test _F1(x, y) ≈ f1(x, y)
                @test _F2(x, y) ≈ f2(x, y)
                @test _F3(x, y) ≈ f3(x, y)
            end
            if abs(x) ≠ abs(y)
                @test _G3(x, y) ≈ g3(x, y)
            end
            if 0 ≤ x < y
                @test _F4(x, y) ≈ f4(x, y)
            end
            if x ≠ y && x ≠ -y
                @test _G2(x, y) ≈ g1(x, y)
            end
        end
    end
end


@testset "F1 & F2 (infinite arguments)" begin
    @test _F1(-Inf, Inf) == 0
    @test _F1(-Inf, 0) == 1
    @test _F1(0, Inf) == -1

    @test _F2(-Inf, Inf) == _F2(Inf, -Inf) == 0
    @test _F2(Inf, Inf) == _F2(-Inf, -Inf) == -Inf

    for v in (0, 1, -1)
        @test _F1(-Inf, v) ≈ _F1(minmax(v, -1e20)...)
        @test _F2(-Inf, v) ≈ _F2(v, -Inf) ≈ _F2(-1e20, v) ≈ _F2(v, -1e20)
        @test _F1(v, Inf) ≈ _F1(minmax(v, 1e20)...)
        @test _F2(Inf, v) ≈ _F2(v, Inf) ≈ _F2(1e20, v) ≈ _F2(v, 1e20)
    end

    for v = -10 : 0.1 : 10
        @test _F1(-Inf, v) ≈ _F1(minmax(v, -1e20)...)
        @test _F2(-Inf, v) ≈ _F2(v, -Inf) ≈ _F2(-1e20, v) ≈ _F2(v, -1e20)
        @test _F1(v, Inf) ≈ _F1(minmax(v, 1e20)...)
        @test _F2(Inf, v) ≈ _F2(v, Inf) ≈ _F2(1e20, v) ≈ _F2(v, 1e20)
    end
end