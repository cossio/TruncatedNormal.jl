using Base.Test

import TruncatedNormal
TN = TruncatedNormal

@testset "mtnexpectation" begin
    @test TN.mtnexpectation(identity, [0,0], [1,1])[1] ≈ 0.42320576629472792311900027453491596108097285629344
    @test TN.mtnexpectation(identity, [0,0], [10,10])[1] ≈ 0.56418958354775628694807945156077258584405060951902
end

@testset "mtn mean, prod & cov" begin
    @test TN.mtnmean([0,0], [1,1]) ≈ [0.42320576629472792311900027453491596108097285629344, 0.42320576629472792311900027453491596108097285629344]
    @test TN.mtnmean([0,0], [10,10]) ≈ [0.56418958354775628694807945156077258584405060951902, 0.56418958354775628694807945156077258584405060951902]
    
    Σinv = [1.0109378485272553 0.10515457696962259; 0.10515457696962258 1.010937848527255];
    μ = [0,0]
    @test TN.mtnmean([0,0], [1,1], μ, Σinv) ≈ [0.4159670342346839, 0.415967034234684]
    @test TN.mtnmean([0,0], [10,10], μ, Σinv) ≈ [0.5414218420122215, 0.5414218420122218]

    Σinv = [1.0109378485272553 0.10515457696962259; 0.10515457696962258 1.010937848527255];
    μ = [-3, -0.5]
    @test TN.mtnmean([0,0], [1,1], μ, Σinv) ≈ [0.14635434527657942, 0.31022069019068765]
    @test TN.mtnmean([0,0], [10,10], μ, Σinv) ≈ [0.14673937531269324, 0.3458612221767866]
    @test TN.mtnpairprod([0,0], [1,1], μ, Σinv) ≈ [0.040912695334608604 0.04516425327711167; 0.04516425327711167 0.15455331382826235]
    @test TN.mtncov([0,0], [1,1], μ, Σinv) ≈ [0.019493101024565584 -0.00023789281114304232; -0.00023789281114304232 0.05831643616152945]
    @test TN.mtncov([0,0], [10,10], μ, Σinv) ≈ [0.019967386641210807 -0.0003691782547602986; -0.0003691782547602986 0.0888728549805712]  rtol=1e-5
end
